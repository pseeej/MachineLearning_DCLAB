{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "My First ML,DL/4.9.3 Multi Input Logistic Regression",
      "provenance": [],
      "authorship_tag": "ABX9TyMz5QtLjdplhUiADe4EU73O",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/pseeej/MachineLearning_DCLAB/blob/master/My%20First%20ML%2CDL/4.9.3%20Multi%20Input%20Logistic%20Regression\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jKtuJJff3SxT"
      },
      "source": [
        "from keras.models import Sequential\n",
        "from keras.layers import Dense, Activation\n",
        "import numpy as np"
      ],
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LnDhzbd73cMh"
      },
      "source": [
        "# 로지스틱 회귀 모델 만들기\n",
        "\n",
        "model = Sequential()\n",
        "# 두 개의 입력 받아 한 개의 출력 리턴\n",
        "model.add(Dense(input_dim=2, units = 1))\n",
        "# 이전 레이어의 출력값을 입력으로 받아 시그모이드 출력 리턴\n",
        "model.add(Activation('sigmoid'))\n",
        "# cross entropy 함수를 비용함수로 사용하여 경사하강법으로 학습 진행.\n",
        "# binary_accuracy는 출력이 0.5 이상일 경우 출력을 1로 판단, 이하일 경우 0으로.\n",
        "model.compile(loss='binary_crossentropy', optimizer='sgd', metrics=['binary_accuracy'])"
      ],
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rXJyBOBp3xYz"
      },
      "source": [
        "# 모델 학습 위한 데이터 생성\n",
        "\n",
        "X = np.array([(0,0), (0,1), (1,0), (1,1)]) \n",
        "Y = np.array([0, 0, 0, 1])"
      ],
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8q-fylKH309A",
        "outputId": "4959455e-5ab7-493a-ff35-7d614a768134"
      },
      "source": [
        "# 모델 학습\n",
        "\n",
        "model.fit(X, Y, epochs=5000, verbose=0)"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<tensorflow.python.keras.callbacks.History at 0x7fe81229bc50>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3JnRcOJd34sK",
        "outputId": "19ff50af-f458-4ee6-c376-9f51678a79e8"
      },
      "source": [
        "# 학습 데이터에 따른 모델의 출력값\n",
        "# (0,0), (0,1), (1,0)은 0.5보다 작고, (1,1)은 0.5보다 큼\n",
        "\n",
        "model.predict(X)"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0.03711471],\n",
              "       [0.22295645],\n",
              "       [0.21720645],\n",
              "       [0.6737907 ]], dtype=float32)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AdSh8ziE4BuE",
        "outputId": "a708abfa-5e1e-44df-d786-341d7efabd71"
      },
      "source": [
        "# 모델 요약\n",
        "\n",
        "model.summary()\n",
        "\n",
        "# dense_1의 parameter로 w1, w2, b 존재. 선형 회귀 layer\n",
        "# 이 layer의 출력이 activation_1의 입력으로 들어가게 됨. 시그모이드 함수"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "dense (Dense)                (None, 1)                 3         \n",
            "_________________________________________________________________\n",
            "activation (Activation)      (None, 1)                 0         \n",
            "=================================================================\n",
            "Total params: 3\n",
            "Trainable params: 3\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_WxHZIg54QyW",
        "outputId": "8b384d98-eb64-458d-add9-311a341d352f"
      },
      "source": [
        "# 첫 번째 레이어에 존재하는 w1, w2, b\n",
        "\n",
        "model.layers[0].weights"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<tf.Variable 'dense/kernel:0' shape=(2, 1) dtype=float32, numpy=\n",
              " array([[1.9739003],\n",
              "        [2.0074012]], dtype=float32)>,\n",
              " <tf.Variable 'dense/bias:0' shape=(1,) dtype=float32, numpy=array([-3.2559211], dtype=float32)>]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cXt1Fx2R4Psn",
        "outputId": "9e7ac269-c693-45c6-e34b-ab4b6888b2f5"
      },
      "source": [
        "# 학습을 통해 얻어진 최적의 w1, w2, b\n",
        "\n",
        "model.layers[0].get_weights()"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[array([[1.9739003],\n",
              "        [2.0074012]], dtype=float32), array([-3.2559211], dtype=float32)]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 8
        }
      ]
    }
  ]
}